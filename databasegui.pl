#!usr/bin/perl
#use strict;
use lib "C:/camelbox/site/lib";
use lib "C:/camelbox/lib";
use warnings;
use Path::Class;
#use autodie;
use Data::Dumper;
use IO::Pipe;
{
  package Data::Dumper;
  no strict 'vars';
  $Terse = $Indent = $Useqq = $Deparse = $Sortkeys = 1;
  $Quotekeys = 0;
}
use Gtk2 '-init';
use constant TRUE =>1;
use constant FALSE =>0;
use DBI;
  use DBI qw(:sql_types);S

my $isnewdatabase = 1;
my $window1=Gtk2::Window->new;
	$window1->set_title("Database Frontend");
	$window1->signal_connect(destroy=> sub{Gtk2_Main_Quit});
	$window1->set_border_width(4);
	$window1->set_default_size(200,50);
my $vbox1=Gtk2::VBox->new;
my $frame1=Gtk2::Frame->new;
	$frame1->set_label("Create a new database or open an existing one.");
my $frame1_2=Gtk2::Frame->new;
my $frame1_3=Gtk2::Frame->new;
my $hbox1=Gtk2::HBox->new;
my $createdbutton=Gtk2::Button->new;
	my $createdbuttontitle= "Create Databse";
		$createdbutton->set_label($createdbuttontitle);
		$createdbutton->signal_connect(clicked=>sub {createdatabasefunction{
		my $window3=Gtk2::Window->new;
		$window3->set_border_width(4);
		$window3->set_title("Database Frontend");
		$window3->set_default_size(200,100);
	my $vbox2=Gtk2::VBox->new;
	my $frame2=Gtk2::Frame->new;
		$frame2->set_label("Database name: ");
		our $createdbentry= Gtk2::Entry->new;
			$createdbentry->set_editable(1);
			$createdbentry->set_text("Enter your database name here!");
	my $hbox2=Gtk2::HBox->new;
		my $frame3=Gtk2::Frame->new;
			our $createdbutton1=Gtk2::FileChooserButton->new('DB Location', 'select-folder');
		my $createdbutton2label= "Create";
		my $frame4=Gtk2::Frame->new;
			my $createdbutton2=Gtk2::Button->new_with_label($createdbutton2label);
				$createdbutton2->signal_connect(clicked=> sub {createdbsub{ 
					our $newdatabasename=$createdbentry->get_text;
					our $createdbfolder= $createdbutton1->get_filename;
					my $dsn='dbi:SQLite:dbname='.$createdbfolder.'\\'.$newdatabasename.'.db';
						my $batabase= DBI->connect("$dsn", "", "", {RaisedError=> 1},) or die $DBI::errstr;
					my $window2=Gtk2::Window->new;
						$window2->set_title("Database Frontend.");
						$window2->set_border_width(4);
						$window2->set_default_size(400, 500);
					my $viewbuffer=Gtk2::TextBuffer->new;
					my $sqlenterfield=Gtk2::TextView->new;
						$sqlenterfield->set_buffer($viewbuffer);
						$sqlenterfield->set_editable(1);
						$sqlenterfield->set_wrap_mode("char");
							my $tvstartiter=$viewbuffer->get_start_iter;
							my $tvenditer=$viewbuffer->get_end_iter;
					our $viewbuffer2=Gtk2::TextBuffer->new;
						our $outputfield=Gtk2::TextView->new;
							$outputfield->set_buffer($viewbuffer2);
							$outputfield->set_editable(0);
							$outputfield->set_wrap_mode("char");
								my $tv2startiter=$viewbuffer2->get_start_iter;
								my $tv2enditer=$viewbuffer2->get_end_iter;
							my @list = ($viewbuffer->get_text($tvstartiter, $tvenditer, 1));
					my $sqlenterbuttonframe=Gtk2::Frame->new;
						my $sqlenterbutton=Gtk2::Button->new;
							$sqlenterbutton->signal_connect(clicked=> sub {sqloperations{
									foreach my $line (@list) {
								my $sth=$batabase->prepare("INSERT INTO mytable VALUES (1, ?)"."\n");
									$sth->bind_param(1, $line, SQL_BLOB);
									$sth->execute();
								my $ver = $sth->fetch();
									my $viewbuffer2startiter= $viewbuffer2->get_start_iter;
									my $viewbuffer2enditer= $viewbuffer2->get_end_iter;
									$viewbuffer2->insert($viewbuffer2startiter, @$ver);
									}
							}});
					my $vbox4=Gtk2::VBox->new;
			$vbox4->add($sqlenterfield);
			$vbox4->add($outputfield);
			$sqlenterbuttonframe->add($sqlenterbutton);
			$vbox4->add($sqlenterbuttonframe);
			$window2->add($vbox4);
			$window2->show_all;
	}});
		$frame4->add($createdbutton2);
		$frame3->add($createdbutton1);
		$hbox2->add($frame3);
		$hbox2->add($frame4);
		$frame2->add($createdbentry);
		$vbox2->add($frame2);
		$vbox2->add($hbox2);
		$window3->add($vbox2);
		$window3->show_all;
}});
my $opendbutton=Gtk2::Button->new;
	my $opendbuttontitle= "Open Database";
		$opendbutton->set_label($opendbuttontitle);
		$opendbutton->signal_connect(clicked=> sub{opendbfunction{
		$isnewdatabase = 0;
	my $window4=Gtk2::Window->new;
		$window4->set_title("Database Frontend");
		$window4->set_border_width(4);
		$window4->set_default_size(100, 50);
		my $vbox3=Gtk2::VBox->new;
			my $hbox3=Gtk2::HBox->new;
				my $frame55=Gtk2::Frame->new;
					our $opendbutton25=Gtk2::FileChooserButton->new('Select DB', 'open');
						my $databasefilefilter1=Gtk2::FileFilter->new;
							$databasefilefilter1->add_pattern("*.db");
							$opendbutton25->add_filter($databasefilefilter1);
				my $frame6=Gtk2::Frame->new;
					my $opendbutton3title= "Open DB";
					my $opendbutton3=Gtk2::Button->new_with_label($opendbutton3title);
						$opendbutton3->signal_connect(clicked=> sub{opendbsub{
							my $opendatabasename2=($opendbutton25->get_filename);
							$names=keys '$opendatabasename2';
							my $databasetoopen='dbi:SQLite:dbname='.$names;
							my $database=DBI->connect($databasetoopen , "", "", {RaisedError=> 1},) or die $DBI::errstr;
						}});
		$frame6->add($opendbutton3);
		$frame55->add($opendbutton25);
		$hbox3->add($frame55);
		$hbox3->add($frame6);
		$vbox3->add($hbox3);
		$window4->add($vbox3);
		$window4->show_all;
}});
$frame1_2->add($createdbutton);
$frame1_3->add($opendbutton);
$hbox1->add($frame1_2);
$hbox1->add($frame1_3);
$vbox1->add($hbox1);
$window1->add($vbox1);
$window1->show_all;
Gtk2->main;
